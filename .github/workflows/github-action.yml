name: Test

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    # Similar to docker-compose.yml but not the same, 🤷‍♂️
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: runner
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Ruby version specified in `.ruby-version`
        uses: eregon/use-ruby-action@master # this will use by default the .ruby-version file in your repository
      - name: Install required apt packages
        run: |
          sudo apt-get -y install libpq-dev
      - name: Update Bundler
        run: gem install bundler -v '2.3.9'
      - name: Setup cache key and directory for gems cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-use-ruby-${{ hashFiles('**/Gemfile.lock') }}
      - name: Read Node.js version to install from `.nvmrc`
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Install required Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"
      - name: Get Yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup cache key and directory for node_modules cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Clear Bundler cache
        run: |
          rm -rf ~/.bundle
          rm -rf vendor/bundle
      - name: Bundle install
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Yarn install
        run: yarn --frozen-lockfile
      - name: Rails test
        env: # Or as an environment variable
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          POSTGRES_HOST: localhost
          POSTGRES_USER: runner
          POSTGRES_PORT: 5432
        run: |
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:migrate RAILS_ENV=test
      - name: Create rails master key for build
        run: |
          touch $GITHUB_WORKSPACE/config/master.key
          echo ${{ secrets.RAILS_MASTER_KEY }} > $GITHUB_WORKSPACE/config/master.key
      - name: Rails tests
        env:
          RAILS_ENV: test
        run: bundle exec rspec
      #- name: Run RuboCop
      #  run: bundle exec rubocop